<Window x:Class="Altomatic.UI.Forms.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Altomatic.UI"
				xmlns:uc="clr-namespace:Altomatic.UI.Controls"
				xmlns:converters="clr-namespace:Altomatic.UI.ValueConverters"
        mc:Ignorable="d"
				MinWidth="900"
				MinHeight="580"
				Height="580"
				Width="900"
				Name="MainWindow1"
        Title="{Binding AppTitle}">
	<Window.Style>
		<Style TargetType="{x:Type Window}">
			<Setter Property="Background" Value="#d1ffd3"/>
			<Style.Triggers>
				<DataTrigger Binding="{Binding IsPaused}" Value="True">
					<Setter Property="Background" Value="#ffd4d4"/>
				</DataTrigger>
			</Style.Triggers>
		</Style>
	</Window.Style>
	<Window.Resources>
		<converters:StatusLabelConverter x:Key="statusLabelConverter"/>
		<converters:StatusBackgroundConverter x:Key="statusBackgroundConverter"/>
		<Storyboard x:Key="mainWindowAction">
			<ColorAnimation 
				AutoReverse="True"
				To="LightGoldenrodYellow" 
				Storyboard.TargetName="MainWindow1"
        Storyboard.TargetProperty="(Background).(Color)" 
        FillBehavior="Stop" 
        Duration="0:0:0.300"/>
		</Storyboard>
	</Window.Resources>
	<DockPanel LastChildFill="True">
		<StatusBar DockPanel.Dock="Bottom" BorderBrush="Gray" BorderThickness="0 1 0 0" Padding="0">
			<StatusBar.ItemsPanel>
				<ItemsPanelTemplate>
					<Grid>
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="*" />
							<ColumnDefinition Width="Auto" />
							<ColumnDefinition Width="Auto" />
							<ColumnDefinition Width="Auto" />
							<ColumnDefinition Width="Auto" />
							<ColumnDefinition Width="Auto" />
							<ColumnDefinition Width="Auto" />
							<ColumnDefinition Width="Auto" />
							<ColumnDefinition Width="Auto" />
							<ColumnDefinition Width="Auto" />
							<ColumnDefinition Width="Auto" />
						</Grid.ColumnDefinitions>
					</Grid>
				</ItemsPanelTemplate>
			</StatusBar.ItemsPanel>
			<StatusBarItem Grid.Column="0">
				<TextBlock Text="{Binding StatusMessage, FallbackValue='Ready'}"/>
			</StatusBarItem>
			<Separator Grid.Column="1"/>
			<StatusBarItem Grid.Column="2">
				<StackPanel Orientation="Horizontal">
					<TextBlock Margin="0 0 4 0">Loops:</TextBlock>
					<TextBlock Text="{Binding LoopCount, FallbackValue=0}"/>
				</StackPanel>
			</StatusBarItem>
			<Separator Grid.Column="3"/>
			<StatusBarItem Grid.Column="4" HorizontalAlignment="Center" Padding="12 0 12 0">
				<StackPanel Orientation="Horizontal">
					<TextBlock Text="{Binding HealerMainJob, FallbackValue='???'}"/>
					<TextBlock Text="/"/>
					<TextBlock Text="{Binding HealerSubJob, FallbackValue='???'}"/>
				</StackPanel>
			</StatusBarItem>
			<Separator Grid.Column="5"/>
			<StatusBarItem Grid.Column="6" HorizontalAlignment="Center" Padding="12 0 12 0">
				<StackPanel Orientation="Horizontal">
					<TextBlock Padding="0 0 4 0">Profile:</TextBlock>
					<TextBlock>
						<TextBlock.Style>
							<Style TargetType="{x:Type TextBlock}">
								<Setter Property="Text" Value="{Binding Options.SettingsFilenameOnly, FallbackValue='None'}"/>
								<Style.Triggers>
									<DataTrigger Binding="{Binding IsPlayerMoving}" Value="">
										<Setter Property="Text" Value="None"/>
									</DataTrigger>
								</Style.Triggers>
							</Style>
						</TextBlock.Style>
					</TextBlock>
				</StackPanel>
			</StatusBarItem>
			<Separator Grid.Column="7"/>
			<StatusBarItem Grid.Column="8" HorizontalAlignment="Center" Padding="12 0 12 0">
				<StackPanel Orientation="Horizontal">
					<TextBlock Padding="0 0 4 0">Addon:</TextBlock>
					<TextBlock>
						<TextBlock.Style>
							<Style TargetType="{x:Type TextBlock}">
								<Setter Property="Text" Value="Unloaded"/>
								<Setter Property="Foreground" Value="DarkRed"/>
								<Style.Triggers>
									<DataTrigger Binding="{Binding IsAddonLoaded}" Value="True">
										<Setter Property="Text" Value="Loaded"/>
										<Setter Property="Foreground" Value="DarkGreen"/>
									</DataTrigger>
								</Style.Triggers>
							</Style>
						</TextBlock.Style>
					</TextBlock>
				</StackPanel>
			</StatusBarItem>
			<Separator Grid.Column="9"/>
			<StatusBarItem Grid.Column="10" HorizontalAlignment="Center" Padding="12 0 12 0">
				<StackPanel Orientation="Horizontal">
					<TextBlock Padding="0 0 4 0">Moving:</TextBlock>
					<TextBlock>
						<TextBlock.Style>
							<Style TargetType="{x:Type TextBlock}">
								<Setter Property="Text" Value="False"/>
								<Setter Property="Foreground" Value="DarkGreen"/>
								<Style.Triggers>
									<DataTrigger Binding="{Binding IsPlayerMoving}" Value="True">
										<Setter Property="Text" Value="True"/>
										<Setter Property="Foreground" Value="DarkRed"/>
									</DataTrigger>
								</Style.Triggers>
							</Style>
						</TextBlock.Style>
					</TextBlock>
				</StackPanel>
			</StatusBarItem>
		</StatusBar>
		<Border Padding="10" DockPanel.Dock="Right" Width="300">
			<DockPanel>
				<Label DockPanel.Dock="Top">Active Party Buffs</Label>
				<TextBlock DockPanel.Dock="Bottom" TextWrapping="Wrap" FontSize="10" Margin="0 5 0 10">
					Note: The list above will only be able to show buffs for the primary and monitored players, and any players in the monitored player's party. This is due to the way the game stores status effects in memory. Alliance status info is simply not available.
				</TextBlock>
				<DataGrid 
					AutoGenerateColumns="False" 
					ItemsSource="{Binding ActiveBuffs}" 
					MaxWidth="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=DockPanel}, Path=ActualWidth}">
					<DataGrid.Columns>
						<DataGridTextColumn Header="Player" Width="Auto" MinWidth="70" Binding="{Binding Player}"/>
						<DataGridTextColumn Header="Name" Width="*" Binding="{Binding Name}"/>
						<DataGridTextColumn Header="Age" Width="Auto" MinWidth="50" Binding="{Binding AgeInSeconds}"/>
						<DataGridTextColumn Header="ID" Width="Auto" MinWidth="45" Binding="{Binding Id}"/>
					</DataGrid.Columns>
				</DataGrid>
			</DockPanel>
		</Border>
		<Border Padding="10 10 10 10" DockPanel.Dock="Top">
			<DockPanel>
				<GroupBox Header="Functions" IsEnabled="{Binding IsNotBusy}" DockPanel.Dock="Right" VerticalAlignment="Top" Padding="8" Margin="16 0 0 0">
					<StackPanel>
						<Button 
							Margin="4"
							Name="PauseButton"
							Cursor="Hand"
							MaxWidth="300"
							IsEnabled="{Binding IsGameReady}"
							Content="{Binding IsPaused, Converter={StaticResource statusLabelConverter}, FallbackValue='Pause'}"
							Click="PauseButton_Click"/>
						<Button 
							Margin="4"
							Name="OptionsButton" 
							Click="OptionsButton_Click">
							<Button.Content>
								<TextBlock>Options...</TextBlock>
							</Button.Content>
						</Button>
						<Button Name="RefreshProcessesButton" Margin="4" Click="RefreshProcessesButton_Click">
							<TextBlock>Refresh Processes</TextBlock>
						</Button>
						<Button Name="RefreshPlayersButton" Margin="4" Click="RefreshPlayersButton_Click">
							<TextBlock>Refresh Players</TextBlock>
						</Button>
						<Button Name="ReloadAddonButton" Margin="4" Click="ReloadAddonButton_Click">
							<TextBlock>Reload Addon</TextBlock>
						</Button>
					</StackPanel>

				</GroupBox>
				<DockPanel>
					<GroupBox 
						DockPanel.Dock="Top"
						Header="Select your game instances:" 
						IsEnabled="{Binding IsNotBusy}"
						VerticalAlignment="Top"
						Padding="8 12 8 12">
						<StackPanel VerticalAlignment="Center">
							<DockPanel Margin="0 0 0 8">
								<Label Padding="3" Margin="0 0 5 0" Width="100" DockPanel.Dock="Left">Primary</Label>
								<ComboBox Name="HealerInstance" ItemsSource="{Binding Processes}" HorizontalContentAlignment="Stretch" SelectionChanged="HealerInstance_SelectionChanged">
									<ComboBox.ItemTemplate>
										<DataTemplate>
											<StackPanel Orientation="Horizontal">
												<TextBlock Text="{Binding MainWindowTitle}" />
											</StackPanel>
										</DataTemplate>
									</ComboBox.ItemTemplate>
								</ComboBox>
							</DockPanel>
							<DockPanel>
								<Label Padding="3" Margin="0 0 5 0" Width="100">Monitored</Label>
								<ComboBox Name="MonitoredInstance" ItemsSource="{Binding Processes}" SelectionChanged="MonitoredInstance_SelectionChanged">
									<ComboBox.ItemTemplate>
										<DataTemplate>
											<StackPanel Orientation="Horizontal">
												<TextBlock Text="{Binding MainWindowTitle}" />
											</StackPanel>
										</DataTemplate>
									</ComboBox.ItemTemplate>
								</ComboBox>
							</DockPanel>
						</StackPanel>
					</GroupBox>
					<GroupBox Header="Miscellaenous" Padding="12" DockPanel.Dock="Top" Margin="0 8 0 0">
						<StackPanel VerticalAlignment="Center">
							<StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
								<StackPanel.Style>
									<Style TargetType="{x:Type StackPanel}">
										<Setter Property="Visibility" Value="Collapsed"/>
										<Style.Triggers>
											<DataTrigger Binding="{Binding HealerMainJob}" Value="GEO">
												<Setter Property="Visibility" Value="Visible"/>
											</DataTrigger>
										</Style.Triggers>
									</Style>
								</StackPanel.Style>
								<StackPanel Orientation="Horizontal" Margin="8 0 8 0">
									<TextBlock Margin="0 0 4 0">Indi:</TextBlock>
									<TextBlock FontWeight="DemiBold" TextTrimming="CharacterEllipsis">
										<TextBlock.Style>
											<Style TargetType="{x:Type TextBlock}">
												<Setter Property="Text" Value="{Binding Options.Config.IndiSpellName, FallbackValue='None'}"/>
												<Style.Triggers>
													<DataTrigger Binding="{Binding Options.Config.IndiSpellName.Length, FallbackValue=0}" Value="0">
														<Setter Property="Text" Value="None"/>
													</DataTrigger>
												</Style.Triggers>
											</Style>
										</TextBlock.Style>
									</TextBlock>
								</StackPanel>
								<StackPanel Orientation="Horizontal" Margin="8 0 8 0">
									<TextBlock Margin="0 0 4 0">Geo:</TextBlock>
									<TextBlock FontWeight="DemiBold" TextTrimming="CharacterEllipsis">
										<TextBlock.Style>
											<Style TargetType="{x:Type TextBlock}">
												<Setter Property="Text" Value="{Binding Options.Config.GeoSpellName, FallbackValue='None'}"/>
												<Style.Triggers>
													<DataTrigger Binding="{Binding Options.Config.GeoSpellName.Length, FallbackValue=0}" Value="0">
														<Setter Property="Text" Value="None"/>
													</DataTrigger>
												</Style.Triggers>
											</Style>
										</TextBlock.Style>
									</TextBlock>
								</StackPanel>
								<StackPanel Orientation="Horizontal" Margin="8 0 8 0">
									<TextBlock Margin="0 0 4 0">Entrust Indi:</TextBlock>
									<TextBlock FontWeight="DemiBold" TextTrimming="CharacterEllipsis">
										<TextBlock.Style>
											<Style TargetType="{x:Type TextBlock}">
												<Setter Property="Text" Value="{Binding Options.Config.EntrustIndiSpellName, FallbackValue='None'}"/>
												<Style.Triggers>
													<DataTrigger Binding="{Binding Options.Config.EntrustIndiSpellName.Length, FallbackValue=0}" Value="0">
														<Setter Property="Text" Value="None"/>
													</DataTrigger>
												</Style.Triggers>
											</Style>
										</TextBlock.Style>
									</TextBlock>
								</StackPanel>
							</StackPanel>							
							<StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
								<StackPanel.Style>
									<Style TargetType="{x:Type StackPanel}">
										<Setter Property="Visibility" Value="Collapsed"/>
										<Style.Triggers>
											<DataTrigger Binding="{Binding HealerMainJob}" Value="COR">
												<Setter Property="Visibility" Value="Visible"/>
											</DataTrigger>
										</Style.Triggers>
									</Style>
								</StackPanel.Style>
								<StackPanel Orientation="Horizontal" Margin="8 0 8 0">
									<TextBlock Margin="0 0 4 0">Roll Targets:</TextBlock>
									<TextBlock FontWeight="DemiBold" TextTrimming="CharacterEllipsis" Text="{Binding RollTargets, FallbackValue='None'}"/>
								</StackPanel>
							</StackPanel>
							<StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
								<StackPanel.Style>
									<Style TargetType="{x:Type StackPanel}">
										<Setter Property="Visibility" Value="Collapsed"/>
										<Style.Triggers>
											<DataTrigger Binding="{Binding HealerMainJob}" Value="COR">
												<Setter Property="Visibility" Value="Visible"/>
											</DataTrigger>
										</Style.Triggers>
									</Style>
								</StackPanel.Style>
								<StackPanel Orientation="Horizontal" Margin="8 8 8 0">
									<TextBlock Margin="0 0 4 0">Roll #1:</TextBlock>
									<TextBlock FontWeight="DemiBold" TextTrimming="CharacterEllipsis" Text="{Binding Options.Config.Roll1.Name, FallbackValue='None'}"/>
									<TextBlock Margin="16 0 4 0">Roll #2:</TextBlock>
									<TextBlock FontWeight="DemiBold" TextTrimming="CharacterEllipsis" Text="{Binding Options.Config.Roll2.Name, FallbackValue='None'}"/>
								</StackPanel>
							</StackPanel>
							<StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
								<StackPanel.Style>
									<Style TargetType="{x:Type StackPanel}">
										<Setter Property="Visibility" Value="Collapsed"/>
										<Style.Triggers>
											<DataTrigger Binding="{Binding HealerMainJob}" Value="COR">
												<Setter Property="Visibility" Value="Visible"/>
											</DataTrigger>
										</Style.Triggers>
									</Style>
								</StackPanel.Style>
								<StackPanel Orientation="Horizontal" Margin="8 8 8 0">
									<TextBlock Margin="0 0 4 0">Last Known Roll:</TextBlock>
									<TextBlock FontWeight="DemiBold" TextTrimming="CharacterEllipsis" Text="{Binding LastKnownRoll, FallbackValue='None'}"/>
								</StackPanel>
							</StackPanel>
						</StackPanel>
					</GroupBox>
				</DockPanel>
			</DockPanel>
		</Border>
		<GroupBox Header="Party Members" Margin="10 0 10 10" IsEnabled="{Binding IsNotBusy}">
			<Grid>
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="1*"/>
					<ColumnDefinition Width="1*"/>
					<ColumnDefinition Width="1*"/>
				</Grid.ColumnDefinitions>
				<StackPanel Grid.Column="0" Margin="5">
					<uc:PlayerStatus Player="{Binding Players[0]}"/>
					<uc:PlayerStatus Player="{Binding Players[1]}"/>
					<uc:PlayerStatus Player="{Binding Players[2]}"/>
					<uc:PlayerStatus Player="{Binding Players[3]}"/>
					<uc:PlayerStatus Player="{Binding Players[4]}"/>
					<uc:PlayerStatus Player="{Binding Players[5]}"/>
				</StackPanel>
				<StackPanel Grid.Column="1" Margin="5">
					<uc:PlayerStatus Player="{Binding Players[6]}"/>
					<uc:PlayerStatus Player="{Binding Players[7]}"/>
					<uc:PlayerStatus Player="{Binding Players[8]}"/>
					<uc:PlayerStatus Player="{Binding Players[9]}"/>
					<uc:PlayerStatus Player="{Binding Players[10]}"/>
					<uc:PlayerStatus Player="{Binding Players[11]}"/>
				</StackPanel>
				<StackPanel Grid.Column="2" Margin="5">
					<uc:PlayerStatus Player="{Binding Players[12]}"/>
					<uc:PlayerStatus Player="{Binding Players[13]}"/>
					<uc:PlayerStatus Player="{Binding Players[14]}"/>
					<uc:PlayerStatus Player="{Binding Players[15]}"/>
					<uc:PlayerStatus Player="{Binding Players[16]}"/>
					<uc:PlayerStatus Player="{Binding Players[17]}"/>
				</StackPanel>
			</Grid>
		</GroupBox>
	</DockPanel>
</Window>
