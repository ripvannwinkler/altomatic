<UserControl x:Class="Altomatic.UI.Controls.PlayerStatus"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:Altomatic.UI.Controls"
						 xmlns:behaviors="http://schemas.microsoft.com/xaml/behaviors"
						 xmlns:interactive="clr-namespace:Altomatic.UI.Behaviors"
						 xmlns:converters="clr-namespace:Altomatic.UI.ValueConverters"
             mc:Ignorable="d" 
						 Name="PlayerStatusControl"
             d:DesignHeight="450" d:DesignWidth="800">
	<UserControl.Resources>
		<converters:CurrentHppBrushConverter x:Key="hppBrushConverter"/>
	</UserControl.Resources>
	<Grid DataContext="{Binding ElementName=PlayerStatusControl}" IsEnabled="{Binding Player.IsActive}">
		<DockPanel>
			<Border BorderBrush="{x:Null}" BorderThickness="0 0 0 5" DockPanel.Dock="Bottom"/>
			<Border Padding="5 5 5 5" Background="Transparent">
				<DockPanel>
					<Button 
						Padding="8 4 8 4" 
						DockPanel.Dock="Right" 
						VerticalAlignment="Center" 
						ToolTip="Control which buffs are automatically applied to this player"
						ContextMenuService.Placement="Bottom">
						<behaviors:Interaction.Behaviors>
							<interactive:DropDownButtonBehavior/>
						</behaviors:Interaction.Behaviors>
						<Button.Content>
							<Label Padding="0">Auto</Label>
						</Button.Content>
						<Button.ContextMenu>
							<ContextMenu >
								<MenuItem IsCheckable="True" Header="Haste" IsChecked="{Binding Player.AutoBuffs.Haste}" />
								<MenuItem IsCheckable="True" Header="Flurry" IsChecked="{Binding Player.AutoBuffs.Flurry}" />
								<MenuItem IsCheckable="True" Header="Refresh" IsChecked="{Binding Player.AutoBuffs.Refresh}" />
								<MenuItem IsCheckable="True" Header="Phalanx" IsChecked="{Binding Player.AutoBuffs.Phalanx}" />
								<MenuItem IsCheckable="True" Header="Firestorm" IsChecked="{Binding Player.AutoBuffs.Firestorm}" />
								<MenuItem IsCheckable="True" Header="Sandstorm" IsChecked="{Binding Player.AutoBuffs.Sandstorm}" />
								<MenuItem IsCheckable="True" Header="Rainstorm" IsChecked="{Binding Player.AutoBuffs.Rainstorm}" />
								<MenuItem IsCheckable="True" Header="Windstorm" IsChecked="{Binding Player.AutoBuffs.Windstorm}" />
								<MenuItem IsCheckable="True" Header="Thunderstorm" IsChecked="{Binding Player.AutoBuffs.Thunderstorm}" />
								<MenuItem IsCheckable="True" Header="Hailstorm" IsChecked="{Binding Player.AutoBuffs.Hailstorm}" />
								<MenuItem IsCheckable="True" Header="Aurorastorm" IsChecked="{Binding Player.AutoBuffs.Aurorastorm}" />
								<MenuItem IsCheckable="True" Header="Voidstorm" IsChecked="{Binding Player.AutoBuffs.Voidstorm}" />
							</ContextMenu>
						</Button.ContextMenu>
					</Button>
					<CheckBox 
						Cursor="Hand" 
						Margin="0 0 5 0" 
						VerticalAlignment="Center" 
						ToolTip="Enable actions on this player" 
						HorizontalContentAlignment="Stretch" 
						VerticalContentAlignment="Center"
						IsChecked="{Binding Player.IsEnabled}">
					</CheckBox>
					<CheckBox 
						Margin="0 0 4 0" 
						DockPanel.Dock="Left" 
						VerticalAlignment="Center" 
						IsChecked="{Binding Player.IsGeoTarget}" 
						ToolTip="Use this player as the target for geocolure spells."/>
					<CheckBox 
						Margin="0 0 4 0" 
						DockPanel.Dock="Left" 
						VerticalAlignment="Center" 
						IsChecked="{Binding Player.IsEntrustTarget}" 
						ToolTip="Use this player as the target for entrusted indocolure spells."/>
					<CheckBox 
						Margin="0 0 4 0" 
						DockPanel.Dock="Left" 
						VerticalAlignment="Center" 
						IsChecked="{Binding Player.IsRequiredForRolls}" 
						ToolTip="This player must be present for Corsair rolls."/>
					<DockPanel Margin="4 0 8 0" VerticalAlignment="Center">
						<Label Name="PlayerName" Padding="0" Margin="0" VerticalAlignment="Center" DockPanel.Dock="Top">
							<TextBlock TextTrimming="CharacterEllipsis" Text="{Binding Player.Name, FallbackValue='Player Name'}"/>
						</Label>
						<ProgressBar 
							Minimum="0" Maximum="100" Height="2" 
							Foreground="{Binding Player.CurrentHpp, Converter={StaticResource hppBrushConverter}}" Value="{Binding Player.CurrentHpp}"/>
					</DockPanel>
				</DockPanel>
			</Border>
		</DockPanel>
	</Grid>
</UserControl>
